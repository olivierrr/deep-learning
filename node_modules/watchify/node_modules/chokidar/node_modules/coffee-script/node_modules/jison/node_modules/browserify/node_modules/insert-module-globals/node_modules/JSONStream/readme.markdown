# JSONStream

streaming JSON.parse and stringify

<img src=https://secure.travis-ci.org/dominictarr/JSONStream.png?branch=master>

## example

```javascript

var request = require('request')
  , JSONStream = require('JSONStream')
  , es = require('event-stream')

var parser = JSONStream.parse(['rows', true])
  , req = request({url: 'http://isaacs.couchone.com/registry/_all_docs'})
  , logger = es.mapSync(function (data) {
      console.error(data)
      return data
    })
```

in node 0.4.x

``` javascript

req.pipe(parser)
parser.pipe(logger)

```

in node v0.5.x

``` javascript
req.pipe(parser).pipe(logger)

```

## JSONStream.parse(path)

usally, a json API will return a list of objects.

`path` should be an array of property names, `RegExp`s, booleans, and/or functions.
any object that matches the path will be emitted as 'data' (and `pipe`d down stream)

a 'root' event is emitted when all data has been received. The 'root' event passes the root object & the count of matched objects.

if `path` is empty or null, no 'data' events are emitted.

### example

query a couchdb view:

``` bash
curl -sS localhost:5984/tests/_all_docs&include_docs=true
```
you will get something like this:

``` js
{"total_rows":129,"offset":0,"rows":[
  { "id":"change1_0.6995461115147918"
  , "key":"change1_0.6995461115147918"
  , "value":{"rev":"1-e240bae28c7bb3667f02760f6398d508"}
  , "doc":{
      "_id":  "change1_0.6995461115147918"
    , "_rev": "1-e240bae28c7bb3667f02760f6398d508","hello":1}
  },
  { "id":"change2_0.69954611151