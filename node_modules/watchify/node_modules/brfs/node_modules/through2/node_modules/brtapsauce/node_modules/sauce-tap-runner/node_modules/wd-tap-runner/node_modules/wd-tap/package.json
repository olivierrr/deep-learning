{
  "name": "wd-tap",
  "version": "0.1.0",
  "description": "Run TAP tests in the browser with WebDriver",
  "keywords": [
    "wd",
    "webdriver",
    "tap",
    "test",
    "browser",
    "web"
  ],
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "author": {
    "name": "Conrad Zimmerman",
    "email": "me@conradz.com"
  },
  "license": "BSD",
  "repository": {
    "type": "git",
    "url": "git@github.com:conradz/wd-tap.git"
  },
  "bugs": {
    "url": "https://github.com/conradz/wd-tap/issues"
  },
  "dependencies": {
    "tap-finished": "0.0.1"
  },
  "devDependencies": {
    "async": "~0.2.9",
    "wd": "~0.2.5",
    "sauce-connect-launcher": "~0.2.2",
    "st": "~0.2.3"
  },
  "readme": "# wd-tap\n\n[![NPM](https://nodei.co/npm/wd-tap.png?compact=true)](https://nodei.co/npm/wd-tap/)\n\n[![Build Status](https://drone.io/github.com/conradz/wd-tap/status.png)](https://drone.io/github.com/conradz/wd-tap/latest)\n[![Dependency Status](https://gemnasium.com/conradz/wd-tap.png)](https://gemnasium.com/conradz/wd-tap)\n\nRun TAP tests in the browser with WebDriver.\n\nThis is a simple utility to run [TAP](http://testanything.org/) tests in a\nbrowser that is automated using\n[WebDriver](http://docs.seleniumhq.org/projects/webdriver/), driven using\n[Node.js](http://nodejs.org/).\n\n## Requirements\n\nYou must first have a test page that has a `<pre>` element with an ID of\n`output` that will contain the TAP test output. You will also need a web\nbrowser that is automated using WebDriver; you can run one yourself locally or\nyou could use a service like [Sauce Labs](http://saucelabs.com/) that will run\nthem for you. For attaching to a WebDriver-automated browser, use\n[wd](https://github.com/admc/wd) that allows Node to interface to WebDriver.\n\nThe test results are parsed using\n[tap-parser](https://github.com/substack/tap-parser).\n\n## Example\n\nThis example assumes that you have a WebDriver server running locally, see the\n[wd docs](https://github.com/admc/wd) for how to connect to a browser. It also\nassumes that you have an HTTP server accessible from the browser serving the\ntest page at `http://localhost:8000/test.html`.\n\n```js\nvar wd = require('wd'),\n    wdTap = require('wd-tap');\n\nvar browser = wd.remote(),\n    url = 'http://localhost:8000/test.html';\n\nbrowser.init(function(err) {\n    if (err) { return; }\n\n    wdTap(url, browser, function(err, results) {\n        // results is the parsed TAP results\n        if (!results.ok) {\n            console.log('Tests failed');\n        }\n\n        browser.quit();\n    });\n});\n```\n\n## Reference\n\n### `wdTap(url, browser, [options], callback)`\n\nRuns the tests in the browser.\n\n`url` is the URL of the web page that contains the tests. The test TAP output\nmust be written to a `<pre>` element with an ID of `output`.\n\n`browser` is the browser (connected with [wd](https://github.com/admc/wd)) that\nwill run the tests. It must be able to access the test URL.\n\n`options` is an optional object that may contain a `timeout` property\nspecifying the maximum time (in seconds) to wait for the TAP output to be\ncompleted. If the TAP output is not completed in that time, an error will be\npassed to `callback`. The default timeout is 30 seconds.\n\n`callback` will be called after the tests are finished. If an error occured\n(for example if the connection to the browser was disconnected), it will be\npassed to the callback. If no error occurred, the TAP results (parsed with\n[tap-parser](https://github.com/substack/tap-parser)) will be passed to the\ncallback as the second argument. Note that if a test fails, it will not be\nconsidered an error, the results will indicate which tests passed or failed.",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/conradz/wd-tap",
  "_id": "wd-tap@0.1.0",
  "dist": {
    "shasum": "a87e8cafef0a016ae48a390cec506f811a7ed64b",
    "tarball": "http://registry.npmjs.org/wd-tap/-/wd-tap-0.1.0.tgz"
  },
  "_from": "wd-tap@~0.1.0",
  "_npmVersion": "1.3.15",
  "_npmUser": {
    "name": "conradz",
    "email": "me@conradz.com"
  },
  "maintainers": [
    {
      "name": "conradz",
      "email": "me@conradz.com"
    }
  ],
  "directories": {},
  "_shasum": "a87e8cafef0a016ae48a390cec506f811a7ed64b",
  "_resolved": "http://registry.npmjs.org/wd-tap/-/wd-tap-0.1.0.tgz"
}
