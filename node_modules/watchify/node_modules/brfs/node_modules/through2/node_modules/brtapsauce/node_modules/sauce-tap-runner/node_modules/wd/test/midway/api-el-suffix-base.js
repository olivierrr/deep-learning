// spliting the test cause it takes too long, list of possible suffixes below
// var suffixes =
//   ['ByClassName', 'ByCssSelector', 'ById', 'ByName', 'ByLinkText',
//   'ByPartialLinkText', 'ByTagName', 'ByXPath', 'ByCss'];

require('../helpers/setup');

exports.test = function function_name (suffix, extraDesc, suffixPartials, criterias) {

  describe('api-el-' + extraDesc + ' ' + env.ENV_DESC, function() {
    var partials = {};

    var browser;
    require('./midway-base')(this, partials).then(function(_browser) { browser = _browser; });

    var elementFuncName = 'element' + suffix;
    partials['browser.' + elementFuncName]  = suffixPartials.one;
    it('browser.' + elementFuncName, function() {
      return Q.all([
        browser[elementFuncName](criterias.valid).should.eventually.exist,
        browser[elementFuncName](criterias.invalid).should.be.rejectedWith(/status: 7/)
      ]);
    });

    var elementFuncNameOrNull = 'element' + suffix + 'OrNull';
    partials['browser.' + elementFuncNameOrNull]  = suffixPartials.one;
    it('browser.' + elementFuncNameOrNull, function() {
      return browser
        [elementFuncNameOrNull](criterias.valid).should.eventually.exist
        [elementFuncNameOrNull](criterias.invalid).should.eventually.be.a('null');
    });

    var elementFuncNameIfExists = 'element' + suffix + 'IfExists';
    partials['browser.' + elementFuncNameIfExists]  = suffixPartials.one;
    it('browser.' + elementFuncNameIfExists, function() {
      return browser
        [elementFuncNameIfExists](criterias.valid).should.eventually.exist
        [elementFuncNameIfExists](criterias.invalid).should.eventually.be.a('undefined');
    });

    var hasElementFuncName = 'hasElement' + suffix;
    partials['browser.' + hasElementFuncName]  = suffixPartials.one;
    it('browser.' + hasElementFuncName, function() {
      return browser
        [hasElementFuncName](criterias.valid).should.eventually.be.ok
        [hasElementFuncName](criterias.invalid).should.eventually.not.be.ok;
    });

    var wai