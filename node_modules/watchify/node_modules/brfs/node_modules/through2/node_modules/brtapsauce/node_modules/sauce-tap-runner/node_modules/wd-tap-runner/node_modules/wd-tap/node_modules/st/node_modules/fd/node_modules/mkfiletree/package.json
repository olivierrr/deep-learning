{
  "author": {
    "name": "Rod Vagg @rvagg",
    "email": "rod@vagg.org"
  },
  "name": "mkfiletree",
  "description": "Make a tree of files and directories from data defined in an object",
  "keywords": [
    "temp",
    "tree",
    "test",
    "serialize"
  ],
  "version": "0.0.1",
  "main": "mkfiletree.js",
  "scripts": {
    "test": "node tests.js"
  },
  "dependencies": {
    "temp": "~0.4.0",
    "async": "~0.1.18",
    "rimraf": "~2.0.1"
  },
  "devDependencies": {
    "xregexp": "~1.5.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rvagg/node-mkfiletree.git"
  },
  "readme": "# node-mkfiletree\nSerialize an object to a file/directory tree. Available in npm as *mkfiletree*\n\n[![NPM](https://nodei.co/npm/mkfiletree.png?stars&downloads)](https://nodei.co/npm/mkfiletree/)\n\nParticularly useful for making test fixtures where you need to create a non-trivial tree of files and don't want to have to mock out `fs`. **See [node-readfiletree](https://github.com/rvagg/node-readfiletree) for file tree deserialization.**\n\n### makeTemp(prefix, tree, callback)\n\nMake a directory & file tree in the system's temporary directory, under a uniquely named subdirectory prefixed with the `prefix` argument.\nThe callback will receive an `error` argument and a `dir` telling you the full path to the root directory created for you.\n\nUsing both *mkfiletree* and *readfiletree* we can do the following:\n\n```js\nrequire('mkfiletree').makeTemp(\n  'testfiles',\n  {\n    'adir': {\n      'one.txt': '1\\n2\\n3\\n',\n      'two.txt': 'a\\nb\\nc\\n',\n      'deeper': {\n        'depths.txt': 'whoa...'\n      }\n    },\n    'afile.txt': 'file contents'\n  },\n  function (err, dir) {\n    require('readfiletree')(dir, function (err, obj) {\n      console.log(obj)\n    })\n  }\n)\n```\n\nThe directory structre created above looks like the following:\n\n```\n$ find /tmp/testfiles11240-23530-r7rs3 -type f -exec sh -c \"echo '\\n{}: ' && cat '{}'\" \\;\n  â†’  /tmp/testfiles11240-23530-r7rs3/afile.txt: \n      file contents\n      /tmp/testfiles11240-23530-r7rs3/adir/deeper/depths.txt: \n      whoa...\n      /tmp/testfiles11240-23530-r7rs3/adir/two.txt: \n      a\n      b\n      c\n\n      /tmp/testfiles11240-23530-r7rs3/adir/one.txt: \n      1\n      2\n      3\n\n```\n\nAnd the output of the program should be the same as the input to *mkfiletree*:\n\n```js\n{\n  'adir': {\n    'one.txt': '1\\n2\\n3\\n',\n    'two.txt': 'a\\nb\\nc\\n',\n    'deeper': {\n      'depths.txt': 'whoa...'\n    }\n  },\n  'afile.txt': 'file contents'\n}\n```\n\n### cleanUp(callback)\n\nClean up any temporary directories created with `makeTemp()` since the last `cleanUp()` call or the begining of the current process. Callback has an `error` argument if there was a problem deleting the directory & file tree.\n\n### make(root, tree, callback)\n\nSame as `makeTemp() but you specify the exact root path *to be created* which will contain your directory tree. The callback also receives the `error` and `dir` arguments. Directories created with `make()` won't be removed with a `cleanUp()` call.\n\n\n## Contributing\n\nTests can be run with `npm test`. I'm more than happy to receive contributions so fork away!\n\n## Synchronous version\n\nNo, there is no sync version, do it async, it's good for your health and contains additional vitamin C, B1, B2 and folate.\n\n\n*Copyright (c) 2012 [Rod Vagg](https://github.com/rvagg) ([@rvagg](https://twitter.com/rvagg))*\n\nMade available under the MIT licence:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rvagg/node-mkfiletree/issues"
  },
  "_id": "mkfiletree@0.0.1",
  "dist": {
    "shasum": "064e6ae23e3a1aa7f10a52ad95251a2b0ecf9d61",
    "tarball": "http://registry.npmjs.org/mkfiletree/-/mkfiletree-0.0.1.tgz"
  },
  "_from": "mkfiletree@*",
  "_npmVersion": "1.2.30",
  "_npmUser": {
    "name": "rvagg",
    "email": "rod@vagg.org"
  },
  "maintainers": [
    {
      "name": "rvagg",
      "email": "rod@vagg.org"
    }
  ],
  "directories": {},
  "_shasum": "064e6ae23e3a1aa7f10a52ad95251a2b0ecf9d61",
  "_resolved": "http://registry.npmjs.org/mkfiletree/-/mkfiletree-0.0.1.tgz",
  "homepage": "https://github.com/rvagg/node-mkfiletree"
}
